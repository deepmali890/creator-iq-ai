generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  clerkUserId String   @unique
  email       String   @unique
  name        String?
  imageUrl    String?
  industry    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  bio         String?
  experience  Int?
  skills      String[] // array of skills

  assessment  Assessment[]
  coverLetter CoverLetter[]
  Resume      Resume[]

  industryInsights IndustryInsights? @relation(fields: [industry], references: [industry])
}

model Assessment {
  id              String   @id @default(cuid())
  userId          String
  user            User     @relation(fields: [userId], references: [id])
  quizScore       Float
  questions       Json[] // Array of JSON questions
  category        String
  impovermentTips String // typo fixed in spelling later
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([userId])
}

model Resume {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  content   String
  atsScore  Float?
  feedback  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoverLetter {
  id             String   @id @default(cuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  content        String
  jobDescription String?
  companyName    String
  status         String   @default("draft")
  jobTitle       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model IndustryInsights {
  id       String @id @default(cuid())
  industry String @unique

  
  users    User[] // Reverse relation

  salaryRanges      Json[] // ðŸ”§ fixed spelling from `slaryRanges`
  growthRate        Float
  demandLevel       DemandLevel
  topSkills         String[]
  marketOutlook     MarketOutlook // ðŸ”§ fixed spelling from `marketOutLook`
  keyTrends         String[]
  recommendedSkills String[] // ðŸ”§ plural for clarity

  lastUpdated DateTime @default(now())
  nextUpdate  DateTime

  @@index([industry])
}

enum DemandLevel {
  HIGH
  MEDIUM
  LOW
}

enum MarketOutlook {
  POSITIVE // ðŸ”§ fixed spelling from POSTIVE
  NEGATIVE
  NEUTRAL
}
